docker run -p 5000:5000 \
  -e AWS_ACCESS_KEY_ID=... \
  -e AWS_SECRET_ACCESS_KEY=... \
  -e AWS_REGION=us-east-1 \
  smiski-backend:latest

docker tag smiski-backend:latest 900546069136.dkr.ecr.us-east-1.amazonaws.com/smiski-backend:latest
docker push <aws_account_id>.dkr.ecr.<region>.amazonaws.com/smiski-backend:latest

docker buildx build --platform linux/amd64 -t smiski-backend:latest .

 docker buildx build --platform linux/amd64 -t smiski-backend:latest .

[+] Building 5.7s (13/13) FINISHED                                                                          docker-container:awesome_chatterjee
 => [internal] load build definition from Dockerfile                                                                                       0.0s
 => => transferring dockerfile: 443B                                                                                                       0.0s
 => [internal] load metadata for docker.io/library/node:18                                                                                 0.5s
 => [auth] library/node:pull token for registry-1.docker.io                                                                                0.0s
 => [internal] load .dockerignore                                                                                                          0.0s
 => => transferring context: 109B                                                                                                          0.0s
 => [builder 1/4] FROM docker.io/library/node:18@sha256:c6ae79e38498325db67193d391e6ec1d224d96c693a8a4d943498556716d3783                   0.0s
 => => resolve docker.io/library/node:18@sha256:c6ae79e38498325db67193d391e6ec1d224d96c693a8a4d943498556716d3783                           0.0s
 => [internal] load build context                                                                                                          0.0s
 => => transferring context: 45.66kB                                                                                                       0.0s
 => CACHED [builder 2/4] WORKDIR /app                                                                                                      0.0s
 => CACHED [builder 3/4] COPY frontend ./frontend                                                                                          0.0s
 => CACHED [builder 4/4] RUN cd frontend && npm install && npm run build                                                                   0.0s
 => [stage-1 3/6] COPY backend ./backend                                                                                                   0.0s
 => [stage-1 4/6] COPY --from=builder /app/frontend/build ./backend/frontend                                                               0.0s
 => [stage-1 5/6] WORKDIR /app/backend                                                                                                     0.0s
 => [stage-1 6/6] RUN npm install                                                                                                          5.1s
WARNING: No output specified with docker-container driver. Build result will only remain in the build cache. To push result image into registry use --push or to load image into docker use --load                                                                                              

View build details: docker-desktop://dashboard/build/awesome_chatterjee/awesome_chatterjee0/4jrwk2o4mlcj60u6da6fc8mha
