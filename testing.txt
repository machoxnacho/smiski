docker run -p 5000:5000 \
  -e AWS_ACCESS_KEY_ID=... \
  -e AWS_SECRET_ACCESS_KEY=... \
  -e AWS_REGION=us-east-1 \
  smiski-backend:latest

docker tag smiski-backend:latest 900546069136.dkr.ecr.us-east-1.amazonaws.com/smiski-backend:latest
docker push <aws_account_id>.dkr.ecr.<region>.amazonaws.com/smiski-backend:latest

USE ME:
docker buildx build --platform linux/amd64 -t smiski-backend:latest --load .
docker tag smiski-backend:latest 900546069136.dkr.ecr.us-east-1.amazonaws.com/smiski-backend:latest
docker push 900546069136.dkr.ecr.us-east-1.amazonaws.com/smiski-backend:latest

curl -X POST http://localhost:80/add-coins \
  -H "Content-Type: application/json" \
  -H "x-user-id: test-user-123" \
  -d '{"coins": 5}'


app.post('/add-coins', async (req, res) => {
  const userId = req.headers['x-user-id'] || 'test-user-123';
  const coinsToAdd = req.body.coins || 0;

  const params = {
    TableName: TABLE_NAME,
    Key: { userId },
    UpdateExpression: 'SET coins = if_not_exists(coins, :zero) + :coins',
    ExpressionAttributeValues: {
      ':coins': coinsToAdd,
      ':zero': 0
    },
    ReturnValues: 'UPDATED_NEW'
  };

  console.log('Attempting to update coins with params:', JSON.stringify(params));

  try {
    const result = await dynamodb.update(params).promise();
    console.log('DynamoDB Update Result:', result);
    res.json({ coins: result.Attributes.coins });
  } catch (error) {
    console.error('DynamoDB PUT error:', error);
    res.status(500).json({ error: 'Error updating coins' });
  }
});
